package src.shooter {	import flash.display.MovieClip;	import flash.display.Shape;	import flash.events.*	import flash.utils.Timer;	import flash.geom.Point;	import flash.display.BlendMode;	import flash.filters.GlowFilter;	import src.core.Game;	public class Turret extends ShooterGameObject{		//Props		var weaponLevel:Number = 8;		var targetAngle:Number;		var gun:Gun;		var healthBar;		var maxHP = 250;		//Visuals		var mainShape:MovieClip = new MovieClip;		public function Turret(){						hp = maxHP;			isVunerable = true;			friendly = false			ShooterGame.enemyList.push(this);			gun = new Gun(this);			addChild(gun);			//Health Bar			healthBar = new Shape();			healthBar.graphics.lineStyle(1,0xffffff,1);			healthBar.graphics.beginFill(0xff0000);			healthBar.graphics.drawRect(-12,0,24,3);			healthBar.graphics.endFill();			healthBar.y = -10;			addChild(healthBar);						mainShape.graphics.beginFill(0xff0000, 0.0);			mainShape.graphics.drawRect(-15,-15,30,30);			mainShape.graphics.endFill();			addChild(mainShape);		}		public override function behavior():void{						targetAngle = Math.atan((y - Player.playerRef.y)/(x - Player.playerRef.x)) * (180/Math.PI);			targetAngle = targetAngle + 90;			//Convert to weird 180 flash angles			if ( Player.playerRef.x < x ){				targetAngle = -1 * (180 - targetAngle);			}			myTurret.rotation = targetAngle;						//turret.rotation = targetAngle;						if ( counter % 12 == 0){				gun.shoot( targetAngle );							}			healthBar.width = 24 * (hp / maxHP);		}						override public function kill(){			//Add Explode			var explosion:Explosion = new Explosion(7, "both");			explosion.x = x;			explosion.y = y;			Game.currentLevel.topLayer.addChild(explosion);			remove();					}		override public function remove(){			//take away the gun			if ( gun != null ){				gun.remove();			}			this.blendMode = BlendMode.NORMAL;			//Search list and delete from array			for(var i=0; i < ShooterGame.enemyList.length; i++)			{				if( ShooterGame.enemyList[i]==this) { ShooterGame.enemyList.splice(i,1) };			}					super.remove();					}	}}