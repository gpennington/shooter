package src.shooter {	import flash.display.MovieClip;	import flash.events.Event;	import flash.filters.BlurFilter;	import src.core.Game;	public class AbilityEffect extends MovieClip{		var splosions:Array = [];		var particles:Array = [];		var particleSpeed:Number = 13;		var particleDir:Array = [Math.random() * 360,Math.random() * 360,Math.random() * 360,Math.random() * 360,Math.random() * 360,Math.random() * 360,Math.random() * 360,Math.random() * 360,Math.random() * 360,];				var counter:int = 1;						public function AbilityEffect(_color){						var color:uint;			var pcolor:uint;						switch (_color){				case "red":					color = 0xff6600;					pcolor = 0xffffcc;					break;				case "green":					color = 0x66ff00;					pcolor = 0xffffcc;					break;				case "blue":					color = 0x9999ff;					pcolor = 0xddddff;					break;			}						var blur:BlurFilter = new BlurFilter(20,20,1);			var filtersArray = [blur];			//Explode Anim			for (var b:int=0; b<5; b++){				splosions[b] = new MovieClip();				splosions[b].x = (Math.random() * 50) - 25;				splosions[b].y = (Math.random() * 50) - 25;				var size:Number = Math.random() * 4;								splosions[b].graphics.beginFill(color, 0.5);				splosions[b].graphics.drawCircle(0,0,6);				splosions[b].graphics.endFill();				splosions[b].scaleX = size + 1;				splosions[b].scaleY = size + 1;								splosions[b].filters = filtersArray;				addChild(splosions[b]);			}			//Sound			//var s_boom:SoundBoom = new SoundBoom();			//s_boom.play();					for (var p:int=0; p<9; p++){				particles[p] = new MovieClip();				particles[p].graphics.beginFill(pcolor, 1);				particles[p].graphics.drawRect(0,0,3,3);				particles[p].graphics.endFill();				addChild(particles[p]);							}			addEventListener(Event.ENTER_FRAME, onFrame, false, 0, true);		}		private function onFrame(e:Event){											moveParticles();						alpha -= 0.1;						if ( counter >= 12 ){				remove();			}			else{				counter++;			}		}		private function moveParticles(){						for (var m:int=0; m<9; m++){								particles[m].y += particleSpeed * Math.sin((particleDir[m] - 90) * (Math.PI / 180));				particles[m].x += particleSpeed * Math.cos((particleDir[m] - 90) * (Math.PI / 180));				//particles[m].alpha -= 0.1;			}			if (particleSpeed >= 1){				particleSpeed -= 1;							}					}				public function remove(){						if ( this.hasEventListener(Event.ENTER_FRAME) ){				removeEventListener(Event.ENTER_FRAME, onFrame);			}						Game.remove(this);					}			}}