 package src.shooter {	import flash.display.MovieClip;	import flash.events.Event;	import flash.utils.Timer;	import flash.display.BlendMode;		import src.core.Game;	import src.core.Settings;	public class Obstacle extends ShooterGameObject{		//Visuals		var mainShape:MovieClip;				var explosionSize:Number;								public function Obstacle(type, xPos, yPos, oWidth, oHeight, _isVunerable:Boolean = false, _isExplosive:Boolean = false, _isBreakable:Boolean = false, _isPermeable:Boolean = false){										this.stop();			ShooterGame.obstacleList.push(this);			x = xPos;			y = yPos;						isVunerable = _isVunerable;			isExplosive = _isExplosive;			isBreakable = _isBreakable;			isPermeable = _isPermeable;						mainShape = new MovieClip();			addChildAt(mainShape,0)					//Visuals			if ( type=="iwall"){				var iwall:MovieClip = new MovieClip();				if ( Settings.debug ){ iwall.graphics.beginFill(0x000000, 0.1); }				else { iwall.graphics.beginFill(0x000000, 0); }				iwall.graphics.drawRect(0,0,oWidth,oHeight);				iwall.graphics.endFill();				mainShape.addChild(iwall);			}			else if ( type=="wall"){				var wall:MovieClip = new MovieClip();				wall.graphics.beginFill(0x000000, 1);				wall.graphics.drawRect(0,0,oWidth,oHeight);				wall.graphics.endFill();				mainShape.addChild(wall);			}			else if ( type=="barrel"){				var barrel:Barrel = new Barrel();				mainShape.addChild(barrel);				hp = 20;				explosionSize = 5;			}			else if ( type=="table"){				var table:Table = new Table();				mainShape.addChild(table);				hp = 35;			}			else if ( type=="truck"){				var truck:Truck = new Truck();				mainShape.addChild(truck);				hp = 75;				explosionSize = 9;			}			else if ( type=="crate"){				var crate:Crate = new Crate();				mainShape.addChild(crate);				hp = 60;			}			//jungle assets			else if ( type=="junglewall"){				var junglewall:JungleWall = new JungleWall();				mainShape.addChild(junglewall);			}			else if ( type=="treetrunk"){				var treetrunk:TreeTrunk = new TreeTrunk();				mainShape.addChild(treetrunk);			}					}		override public function kill(){						//Back to normal look						this.blendMode = BlendMode.NORMAL;			if (isExplosive){ //Add Explosion 				explode();			}			if (isBreakable){ //Just break it				breakObstacle();			}			if ( isExplosive && isBreakable == false){ // Explodes and disappears				//Remove from Display				//Game.remove(this);				remove();				//trace("blown to bits");			}			//Search list and delete from array			for(var i=0; i < ShooterGame.obstacleList.length; i++)			{				if(ShooterGame.obstacleList[i]==this) { ShooterGame.obstacleList.splice(i,1) };			}						super.kill();					}		override public function remove(){						//Search list and delete from array			for(var i=0; i < ShooterGame.obstacleList.length; i++)			{				if(ShooterGame.obstacleList[i]==this) { ShooterGame.obstacleList.splice(i,1) };			}						super.remove();					}		public function breakObstacle(){			//TODO Add variable for broken frame			//Go to broken frame			var mc = mainShape.getChildAt(0);			mc.gotoAndStop(2);		}		public function explode(){						//Visibly Explode			var explosion:Explosion = new Explosion(explosionSize, "both");			explosion.x = x;			explosion.y = y;			Game.currentLevel.topLayer.addChild(explosion);					}	}}